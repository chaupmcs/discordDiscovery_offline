#get link the input file
link_input_file = paste0(getwd(), "/SAX_update/SAX_update/bin/Debug/Data/chfdb_chf01_275.txt")
#get link and name the output file
link_output = paste0(getwd(),"/SAX_update/SAX_update/bin/Debug/Data/chfdb_chf01_275_1_col.csv")
#read file to R
input_data = read.csv(link_input_file, sep="", header = F)
#check input_data
#View(input_data)
#convert the input_data to just 1 col
data_one_col =as.vector(t(input_data))
#check
#View(data.frame(data_one_col))
#write to file
write.csv(data_one_col, link_output, row.names=F)
plot(data_one_col, type='o')
link_input_file = paste0(getwd(), "/SAX_update/SAX_update/bin/Debug/Data/chfdb_chf01_275.txt")
link_output = paste0(getwd(),"/SAX_update/SAX_update/bin/Debug/Data/chfdb_chf01_275_1_col.csv")
input_data = read.csv(link_input_file, sep="", header = F)
link_input_file = paste0(getwd(), "/SAX_update/SAX_update/bin/Debug/Data/chfdb_chf01_275.txt")
link_input_file
#get link the input file
link_input_file = paste0(getwd(), "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf01_275.txt")
#get link and name the output file
link_output = paste0(getwd(),"C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf01_275_1col.txt")
#read file to R
input_data = read.csv(link_input_file, sep="", header = F)
#check input_data
#View(input_data)
#convert the input_data to just 1 col
data_one_col =as.vector(t(input_data))
#check
#View(data.frame(data_one_col))
#write to file
write.csv(data_one_col, link_output, row.names=F)
plot(data_one_col, type='o')
link_input_file = paste0(getwd(), "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf01_275.txt")
link_output = paste0(getwd(),"C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf01_275_1col.txt")
input_data = read.csv(link_input_file, sep="", header = F)
input_data = read.csv(link_input_file, sep="", header = F)
link_input_file
link_input_file = paste0(getwd(), "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf01_275.txt")
link_inputfile = paste0(getwd(), "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf01_275.txt")
link_outputfile = paste0(getwd(),"C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf01_275_1col.txt")
input_data = read.csv(link_input_file, sep="", header = F)
link_inputfile =  "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf01_275.txt"
link_outputfile = "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf01_275_1col.txt"
input_data = read.csv(link_input_file, sep="", header = F)
link_inputfile =  "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf01_275.txt"
#get link the input file
link_inputfile =  "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf01_275.txt"
#get link and name the output file
link_outputfile = "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf01_275_1col.txt"
#read file to R
input_data = read.csv(link_inputfile, sep="", header = F)
#check input_data
#View(input_data)
#convert the input_data to just 1 col
data_one_col =as.vector(t(input_data))
#check
#View(data.frame(data_one_col))
#write to file
write.csv(data_one_col, link_outputfile, row.names=F)
plot(data_one_col, type='o')
View(data.frame(data_one_col))
plot(1:500,data_one_col, type='o')
plot(1:500,data_one_col[1:500], type='o')
#get link the input file
link_inputfile =  "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf13_45590.txt"
#get link and name the output file
link_outputfile = "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf13_275_1col.txt"
#read file to R
input_data = read.csv(link_inputfile, sep="", header = F)
#check input_data
#View(input_data)
#convert the input_data to just 1 col
data_one_col =as.vector(t(input_data))
#check
View(data.frame(data_one_col))
#write to file
write.csv(data_one_col, link_outputfile, row.names=F)
plot(1:500,data_one_col[1:500], type='o')
#get link the input file
link_inputfile =  "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf13_45590.txt"
#get link and name the output file
link_outputfile = "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf13_275_1col.txt"
#read file to R
input_data = read.csv(link_inputfile, sep="", header = F)
#check input_data
#View(input_data)
#convert the input_data to just 1 col
data_one_col =as.vector(t(input_data))
#check
View(data.frame(data_one_col))
#write to file
write.csv(data_one_col, link_outputfile, row.names=F)
plot(1:50,data_one_col[1:50], type='o')
#get link the input file
link_inputfile =  "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf13_45590.txt"
#get link and name the output file
link_outputfile = "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf13_275_1col.txt"
#read file to R
input_data = read.csv(link_inputfile, sep="", header = F)
#check input_data
#View(input_data)
#convert the input_data to just 1 col
data_one_col =as.vector(t(input_data))
#check
View(data.frame(data_one_col))
#write to file
write.csv(data_one_col, link_outputfile, row.names=F)
plot(1:500,data_one_col[1:500], type='o')
data_one_col = input_data[1]
plot(1:500,data_one_col[1:500], type='o')
data_one_col
plot(1:500,data_one_col[1:500,], type='o')
data_one_col = input_data[2]
plot(1:500,data_one_col[1:500,], type='o')
data_one_col = input_data[3]
plot(1:500,data_one_col[1:500,], type='o')
#get link the input file
link_input_file = paste0(getwd(), "/Discord_Timeseries/BitClustering/bin/Debug/Data/chfdb_chf01_275.txt")
#get link and name the output file
link_output = paste0(getwd(), "/Discord_Timeseries/BitClustering/bin/Debug/Data/chfdb.txt")
#read file to R
input_data = read.csv(link_input_file, sep="", header = F)
data_one_col = input_data[2]
write.csv(data_one_col, link_output, row.names=F)
link_input_file = paste0(getwd(), "/Discord_Timeseries/BitClustering/bin/Debug/Data/chfdb_chf01_275.txt")
link_input_file
#get link the input file
link_input_file = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf01_275.txt")
#get link and name the output file
link_output = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb.txt")
#read file to R
input_data = read.csv(link_input_file, sep="", header = F)
data_one_col = input_data[2]
write.csv(data_one_col, link_output, row.names=F)
plot(data_one_col)
plot(data_one_col, type="o")
data_one_col
link_input_file = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf01_275.txt")
link_output = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb.txt")
input_data = read.csv(link_input_file, sep="", header = F)
input_data
data_one_col = input_data[2]
data_one_col
plot(data_one_col, type="o")
plot(1:1000,data_one_col[1:1000], type="o")
plot(1:200, data_one_col[1:200], type="o")
plot(1:200, data_one_col[1:200,], type="o")
plot(data_one_col[,], type="o")
plot(data_chf01[,], type="o", col="blue")
#get link the input file
link_input_file = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb_chf01_275.txt")
#get link and name the output file
link_output_chfdb = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb.txt")
link_output_chf01 = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chf01.txt")
#read file to R
input_data = read.csv(link_input_file, sep="", header = F)
data_chfdb= input_data[2]
data_chf01 = input_data[3]
write.csv(data_chfdb, link_output_chfdb, row.names=F)
write.csv(data_chf01, link_output_chf01, row.names=F)
plot(data_chfdb[,], type="o")
plot(data_chf01[,], type="o", col="blue")
link_input_file = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\xmitdb_x108_0.txt")
link_output_chfdb = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chfdb.txt")
link_output_chf01 = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\chf01.txt")
#get link the input file
link_input_file = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\xmitdb_x108_0.txt")
#get link and name the output file
link_output_chfdb = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\xmitdb.txt")
link_output_chf01 = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\x108.txt")
#read file to R
input_data = read.csv(link_input_file, sep="", header = F)
data_chfdb= input_data[2]
data_chf01 = input_data[3]
write.csv(data_chfdb, link_output_chfdb, row.names=F)
write.csv(data_chf01, link_output_chf01, row.names=F)
plot(data_chfdb[,], type="o")
plot(data_chf01[,], type="o", col="blue")
#get link the input file
link_input_file = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\xmitdb_x108_0.txt")
#get link and name the output file
link_output_chfdb = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\xmitdb.txt")
link_output_chf01 = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\x108.txt")
#read file to R
input_data = read.csv(link_input_file, sep="", header = F)
data_chfdb= input_data[2]
data_chf01 = input_data[3]
write.csv(data_chfdb, link_output_chfdb, row.names=F)
write.csv(data_chf01, link_output_chf01, row.names=F)
plot(data_chfdb[,], type="o")
plot(data_chf01[,], type="o", col="blue")
link_er = "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\ERP_1_col.csv"
data_erp = read.csv(link_erp, sep="", header = F)
link_erp = "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\ERP_1_col.csv"
data_erp = read.csv(link_erp, sep="", header = F)
plot(data_erp[,], type="o")
plot(data_erp[,1], type="o")
data_erp
plot(1:1000, data_erp[1:1000,1], type="o")
plot(1:2000, data_erp[1:2000,1], type="o")
plot(1:5000, data_erp[1:5000,1], type="o")
#get link the input file
link_input_file = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\xmitdb_x108_0.txt")
#get link and name the output file
link_output_chfdb = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\xmitdb.txt")
link_output_chf01 = ("C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\x108.txt")
#read file to R
input_data = read.csv(link_input_file, sep="", header = F)
data_chfdb= input_data[2]
data_chf01 = input_data[3]
write.csv(data_chfdb, link_output_chfdb, row.names=F)
write.csv(data_chf01, link_output_chf01, row.names=F)
plot(data_chfdb[,], type="o")
plot(data_chf01[,], type="o", col="blue")
link_erp = "C:\\Users\\chauuser_w10\\Desktop\\GIT_REPOS\\Discord_Timeseries\\BitClustering\\bin\\Debug\\Data\\ERP_1_col.csv"
data_erp = read.csv(link_erp, sep="", header = F)
plot(5000:10000, data_erp[5000:10000,1], type="o")
plot(1000:10000, data_erp[1000:10000,1], type="o")
plot(1000:10000, data_erp[1000:10000,1], type="l")
##### report for Discord_Timeseries project
# Ver 2.4: Jan 2nd 2017 |
#   =====================
#     'BitClustering Li_Braysy': K_Clusters = 28, W_length = N_length / 4;
#     'HOT_SAX + Squeezer' and 'BitCluster + Squeezer': threshold = 0.85, W_length=5;
#     'HOT_SAX': W_length = 3;
#
#     *Note:
#       time unit is millisecond.
#
#     TEK16: 	(N_length: "128")
#     BitClustering Li_Braysy: 1426, 1336, 2033, 1150, 1225
#     BitCluster + Squeezer: 973, 1029, 1040, 1253, 1252
#     HOT_SAX: 5362, 5406, 5407, 5327, 5316
#     HOT_SAX + Squeezers: 1730, 1857, 1755, 1716, 1783
#
#
#     TEK17: (N_length: "128")
#     BitClustering Li_Braysy: 1526, 2247, 2473, 1565, 1884
#     BitCluster + Squeezer: 1754, 2083, 1951, 1912, 1940
#     HOT_SAX: 6229, 6118, 6037, 6135, 6239
#     HOT_SAX + Squeezers: 1049, 1048, 1021, 1141, 1197
#
#
#     ECG: (N_length: "40")
#     BitClustering Li_Braysy: 4467, 4996, 4324, 4097, 4144
#     BitCluster + Squeezer: 4857, 5091, 4707, 4658, 4992
#     HOT_SAX: 37902, 37886, 37620, 37373, 38130
#     HOT_SAX + Squeezers: 18618, 18478, 18754, 18569, 18824
#
#     power_data: (N_length: "200")
#     BitClustering Li_Braysy: 23651, 27904, 28663, 27417, 23799
#     BitCluster + Squeezer: 22266, 26483, 24031, 24217, 22067
#     HOT_SAX: 215822, 256714, 214682, 210732, 226393
#     HOT_SAX + Squeezers: 26194, 26168, 26389, 26837, 26265
#
#     nprs43: (N_length: "160")
#     BitClustering Li_Braysy: 14208, 9993, 10956, 12452, 10698
#     BitCluster + Squeezer: 9685, 9754, 10037, 10736, 10424
#     HOT_SAX: 45242, 46140, 46584, 45803, 47454
#     HOT_SAX + Squeezers: 18920, 18429, 18420, 17727, 17950
#
#     nprs44: (N_length: "160")
#     BitClustering Li_Braysy: 11029, 13268, 11682, 12679, 10901
#     BitCluster + Squeezer: 10532, 11454, 11210, 10736, 10393
#     HOT_SAX: 73173, 72792, 74051, 72907, 72529
#     HOT_SAX + Squeezers: 37491, 38156, 37665, 37594, 36328
#
#     ERP: (N_length: "64")
#     BitClustering Li_Braysy: 423232, 478050, 438785, 425828, 443904
#     BitCluster + Squeezer: 404934, 385386, 393415, 403835, 399607
#     HOT_SAX: 5582402
#     HOT_SAX + Squeezers: 866882
#
# normalize_minmax <- function(vector_x)
# {
#   min = min(vector_x)
#   max = max(vector_x)
#   interval = max - min
#
#   vector_norm = sapply(vector_x, function(x){x=(x-min)/interval})
#
#   return(vector_norm)
# }
BitCluter_Li_Braysy = c( mean(1426, 1336, 2033, 1150, 1225)/1000,
mean(1526, 2247, 2473, 1565, 1884)/1000,
mean(4467, 4996, 4324, 4097, 4144)/1000,
mean(23651, 27904, 28663, 27417, 23799)/1000,
mean(14208, 9993, 10956, 12452, 10698)/1000,
mean(11029, 13268, 11682, 12679, 10901)/1000,
mean(423232, 478050, 438785, 425828, 443904)/1000 )
BitCluter_Squeezer = c( mean(973, 1029, 1040, 1253, 1252)/1000,
mean(1754, 2083, 1951, 1912, 1940)/1000,
mean(4857, 5091, 4707, 4658, 4992)/1000,
mean(22266, 26483, 24031, 24217, 22067)/1000,
mean(9685, 9754, 10037, 10736, 10424)/1000,
mean(10532, 11454, 11210, 10736, 10393)/1000,
mean(404934, 385386, 393415, 403835, 399607)/1000 )
HOTSAX            = c( mean(5362, 5406, 5407, 5327, 5316)/1000,
mean(6229, 6118, 6037, 6135, 6239)/1000,
mean(37902, 37886, 37620, 37373, 38130)/1000,
mean(215822, 256714, 214682, 210732, 226393)/1000,
mean(45242, 46140, 46584, 45803, 47454)/1000,
mean(73173, 72792, 74051, 72907, 72529)/1000,
mean(5582402)/1000 )
HOTSAX_Squeezer = c( mean(1730, 1857, 1755, 1716, 1783)/1000,
mean(1049, 1048, 1021, 1141, 1197)/1000,
mean(18618, 18478, 18754, 18569, 18824)/1000,
mean(26194, 26168, 26389, 26837, 26265)/1000,
mean(18920, 18429, 18420, 17727, 17950)/1000,
mean(37491, 38156, 37665, 37594, 36328)/1000,
mean(866882)/1000 )
report_raw = as.data.frame(cbind(BitCluter_Li_Braysy, BitCluter_Squeezer, HOTSAX, HOTSAX_Squeezer))
rownames(report_raw) = c("TEK16", "TEK17", "ECG", "power_data", "nprs43", "nprs44", "ERP")
# View(report_raw)
getwd()
# Writing to file...
write.csv(report_raw, "report_time_execution.csv", nrow=F)
#norm size:
report= report_raw
report[7,] = report[7,]/100
report[4,] = report[4,]/5
report[c(3,5,6),] = report[c(3,5,6),]/2
#data_names
data_names <-rep(rownames(report), each = ncol(report))
#method_names
method_names <- gl(ncol(report), 1, ncol(report)*nrow(report), labels=colnames(report))
#values
time_execution <-  as.vector(t(report))
data_plot <- data.frame(column1=data_names, column2=method_names, column3=time_execution)
require(ggplot2)
ggplot(data_plot, aes(x=data_names, y=time_execution, fill=method_names)) +  geom_bar(position=position_dodge(), stat="identity")
getwd()
dirname("a/b/c/d")
file_link = paste0(getwd(),"/report_time_execution.csv")
write.csv(report_raw, file_link, nrow=F)
write.csv(report_raw, file_link, row.names =F)
file_link
file_link = paste0(dirname(getwd()),"/report_time_execution.csv")
write.csv(report_raw, file_link, row.names =F)
file_link = paste0(dirname(getwd()), "/Reports","/report_time_execution.csv")
write.csv(report_raw, file_link, row.names = T)
getwd()
setwd("..")
getwd()
picture_link = paste0(dirname(getwd()), "/Reports/report_barChart.png")
require(ggplot2)
ggplot(data_plot, aes(x=data_names, y=time_execution, fill=method_names)) +  geom_bar(position=position_dodge(), stat="identity")
#save the picture:
picture_link = paste0(dirname(getwd()), "/Reports/report_barChart.png")
ggsave(picture_link)
link_store_picture = paste0(dirname(getwd()), "/Reports")
setwd(link_store_picture)
link_store_picture
getwd()
##### report for Discord_Timeseries project
# Ver 2.4: Jan 2nd 2017 |
#   =====================
#     'BitClustering Li_Braysy': K_Clusters = 28, W_length = N_length / 4;
#     'HOT_SAX + Squeezer' and 'BitCluster + Squeezer': threshold = 0.85, W_length=5;
#     'HOT_SAX': W_length = 3;
#
#     *Note:
#       time unit is millisecond.
#
#     TEK16: 	(N_length: "128")
#     BitClustering Li_Braysy: 1426, 1336, 2033, 1150, 1225
#     BitCluster + Squeezer: 973, 1029, 1040, 1253, 1252
#     HOT_SAX: 5362, 5406, 5407, 5327, 5316
#     HOT_SAX + Squeezers: 1730, 1857, 1755, 1716, 1783
#
#
#     TEK17: (N_length: "128")
#     BitClustering Li_Braysy: 1526, 2247, 2473, 1565, 1884
#     BitCluster + Squeezer: 1754, 2083, 1951, 1912, 1940
#     HOT_SAX: 6229, 6118, 6037, 6135, 6239
#     HOT_SAX + Squeezers: 1049, 1048, 1021, 1141, 1197
#
#
#     ECG: (N_length: "40")
#     BitClustering Li_Braysy: 4467, 4996, 4324, 4097, 4144
#     BitCluster + Squeezer: 4857, 5091, 4707, 4658, 4992
#     HOT_SAX: 37902, 37886, 37620, 37373, 38130
#     HOT_SAX + Squeezers: 18618, 18478, 18754, 18569, 18824
#
#     power_data: (N_length: "200")
#     BitClustering Li_Braysy: 23651, 27904, 28663, 27417, 23799
#     BitCluster + Squeezer: 22266, 26483, 24031, 24217, 22067
#     HOT_SAX: 215822, 256714, 214682, 210732, 226393
#     HOT_SAX + Squeezers: 26194, 26168, 26389, 26837, 26265
#
#     nprs43: (N_length: "160")
#     BitClustering Li_Braysy: 14208, 9993, 10956, 12452, 10698
#     BitCluster + Squeezer: 9685, 9754, 10037, 10736, 10424
#     HOT_SAX: 45242, 46140, 46584, 45803, 47454
#     HOT_SAX + Squeezers: 18920, 18429, 18420, 17727, 17950
#
#     nprs44: (N_length: "160")
#     BitClustering Li_Braysy: 11029, 13268, 11682, 12679, 10901
#     BitCluster + Squeezer: 10532, 11454, 11210, 10736, 10393
#     HOT_SAX: 73173, 72792, 74051, 72907, 72529
#     HOT_SAX + Squeezers: 37491, 38156, 37665, 37594, 36328
#
#     ERP: (N_length: "64")
#     BitClustering Li_Braysy: 423232, 478050, 438785, 425828, 443904
#     BitCluster + Squeezer: 404934, 385386, 393415, 403835, 399607
#     HOT_SAX: 5582402
#     HOT_SAX + Squeezers: 866882
#
# normalize_minmax <- function(vector_x)
# {
#   min = min(vector_x)
#   max = max(vector_x)
#   interval = max - min
#
#   vector_norm = sapply(vector_x, function(x){x=(x-min)/interval})
#
#   return(vector_norm)
# }
BitCluter_Li_Braysy = c( mean(1426, 1336, 2033, 1150, 1225)/1000,
mean(1526, 2247, 2473, 1565, 1884)/1000,
mean(4467, 4996, 4324, 4097, 4144)/1000,
mean(23651, 27904, 28663, 27417, 23799)/1000,
mean(14208, 9993, 10956, 12452, 10698)/1000,
mean(11029, 13268, 11682, 12679, 10901)/1000,
mean(423232, 478050, 438785, 425828, 443904)/1000 )
BitCluter_Squeezer = c( mean(973, 1029, 1040, 1253, 1252)/1000,
mean(1754, 2083, 1951, 1912, 1940)/1000,
mean(4857, 5091, 4707, 4658, 4992)/1000,
mean(22266, 26483, 24031, 24217, 22067)/1000,
mean(9685, 9754, 10037, 10736, 10424)/1000,
mean(10532, 11454, 11210, 10736, 10393)/1000,
mean(404934, 385386, 393415, 403835, 399607)/1000 )
HOTSAX            = c( mean(5362, 5406, 5407, 5327, 5316)/1000,
mean(6229, 6118, 6037, 6135, 6239)/1000,
mean(37902, 37886, 37620, 37373, 38130)/1000,
mean(215822, 256714, 214682, 210732, 226393)/1000,
mean(45242, 46140, 46584, 45803, 47454)/1000,
mean(73173, 72792, 74051, 72907, 72529)/1000,
mean(5582402)/1000 )
HOTSAX_Squeezer = c( mean(1730, 1857, 1755, 1716, 1783)/1000,
mean(1049, 1048, 1021, 1141, 1197)/1000,
mean(18618, 18478, 18754, 18569, 18824)/1000,
mean(26194, 26168, 26389, 26837, 26265)/1000,
mean(18920, 18429, 18420, 17727, 17950)/1000,
mean(37491, 38156, 37665, 37594, 36328)/1000,
mean(866882)/1000 )
report_raw = as.data.frame(cbind(BitCluter_Li_Braysy, BitCluter_Squeezer, HOTSAX, HOTSAX_Squeezer))
rownames(report_raw) = c("TEK16", "TEK17", "ECG", "power_data", "nprs43", "nprs44", "ERP")
# View(report_raw)
getwd
# Writing to file...
file_link = paste0(dirname(getwd()), "/Reports","/report_time_execution.csv")
write.csv(report_raw, file_link, row.names = T)
#norm size:
report= report_raw
report[7,] = report[7,]/100
report[4,] = report[4,]/5
report[c(3,5,6),] = report[c(3,5,6),]/2
#data_names
data_names <-rep(rownames(report), each = ncol(report))
#method_names
method_names <- gl(ncol(report), 1, ncol(report)*nrow(report), labels=colnames(report))
#values
time_execution <-  as.vector(t(report))
data_plot <- data.frame(column1=data_names, column2=method_names, column3=time_execution)
require(ggplot2)
ggplot(data_plot, aes(x=data_names, y=time_execution, fill=method_names)) +  geom_bar(position=position_dodge(), stat="identity")
#save the picture:
link_store_picture = paste0(dirname(getwd()), "/Reports")
setwd(link_store_picture)
ggsave("Report_BarChart.png")
getwd()
dirname(getwd())
getwd()
getwd()
